@page "/hospitals"
@inject NavigationManager NavigationManager
@inject IHospitalService HospitalService

<PageTitle>Hospitals</PageTitle>

<h1>Hospitals</h1>

<p>Find hospitals already registered in our database.</p>

<div class="text-right">
    <button class="btn btn-primary" @onclick="NavigateToRegister">Adicionar</button>
</div>

@if (_hospitals == null)
{
<p>
    <em>Loading...</em>
</p>
}
else
{
<table class="table">
    <thead>
    <tr>
        <th>Id</th>
        <th>Name</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var hospital in _hospitals)
    {
    <tr>
        <td>@hospital.Id</td>
        <td>@hospital.Name</td>
        <td>
            <button class="btn btn-primary" @onclick="() => NavigateToEdit(hospital.Id)">Edit</button>
            <button class="btn btn-danger" @onclick="() => DeleteHospital(hospital.Id)">Delete</button>
        </td>
    </tr>
    }
    </tbody>
</table>
}

@code {
    private List<GetHospitalOutputModel>? _hospitals;

    protected override async Task OnInitializedAsync()
    {
        _hospitals = await HospitalService.GetAll() ;
    }
    
    private void NavigateToRegister()
    {
        NavigationManager.NavigateTo("/hospitals/register");
    }
    
    private void NavigateToEdit(int id)
    {
        NavigationManager.NavigateTo($"/hospitals/edit/{id}");
    }

    private async Task DeleteHospital(int id)
    {
        await HospitalService.Delete(id);
        _hospitals = await HospitalService.GetAll();
    }
}